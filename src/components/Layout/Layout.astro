---
import '../../styles/global.css';

import Header from './Header.astro';
import Footer from './Footer.astro';

const defaultSite = 'https://aktardigrade13-blog.pages.dev';

// Astro.siteが文字列またはURLオブジェクトの場合に備えて、toString()で文字列に変換する
const siteValue = (Astro.site ?? defaultSite).toString();
const siteUrl = siteValue.endsWith('/') ? siteValue.slice(0, -1) : siteValue;
const { title, eyecatch } = Astro.props as {
    title?: string;
    eyecatch?: string | { src: string };
};
const defaultEyecatch = '/default-eyecatch.png'; // eyecatch 未指定時のデフォルト画像

const toAbs = (p?: string) => (p ? new URL(p, siteUrl).toString() : undefined);
const imageSrc = typeof eyecatch === 'string' ? eyecatch : eyecatch?.src;
const ogImageUrl = toAbs(imageSrc) ?? toAbs(defaultEyecatch)!;

const fullTitle = title ? `${title} - ${Astro.site}` : Astro.site;
---

<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{fullTitle}</title>
        <link rel="icon" href="/読書のアイコン.png" type="image/png" />

        <!-- OGP用metaタグ -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.site} />
        <meta property="og:title" content={fullTitle} />
        <meta property="og:image" content={ogImageUrl} />

        <!-- Twitterカード用metaタグ -->
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content={fullTitle} />
        <meta name="twitter:image" content={ogImageUrl} />

    </head>
    <body class="flex flex-col min-h-screen">
        <!-- ヘッダー -->
        <Header />

        <!-- メインコンテンツ -->
        <main class="flex-grow container mx-auto max-w-6xl px-4 sm:px-6 md:px-8 py-4">
        <slot />
        </main>

        <!-- フッター -->
        <Footer />
    </body>
</html>
